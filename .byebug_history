c
Location.where("zip_code = ? AND timestamp >= ?", zip_code, first_date).length
first_date = first_date.to_s.split(" ").first
first_date.to_s.split(" ").first
first_date.to_s.split(" ")
firdate_date.to_s.split(" ")
first_date
Location.where("zip_code = ? AND timestamp >= ?", zip_code, first_date).length
Location.where("zip_code = ? AND timestamp >= ?", zip_code, first_date)
zip_code = "95070"
first_date = Time.now - 10.days
Time.now - 10.days
Location.where("zip_code = ? AND timestamp >= ?", "95070", (Time.now - 10.days)).length
Location.where("zip_code = ? AND timestamp >= ?", "95070", (Time.now - 10.days))
Location.where("zip_code = ? AND time_stamp >= ?", "95070", (Time.now - 10.days))
a.date
a.day
a = Time.now- 10.days
Time.now - 10.days
Time.now - limit.days
Time.now - 10.days
Time.now - limit.days
Location.last_days("95070").length
Location.last_days("95070")
Time.now - 10.days
@locations.length
c
@locations.length
@locations
c
JSON.parse(raw_json)
query_locations(@zip_code)
raw_json
verify_format(@zip_code)
@zip_code
flash[:errors]
@locations
c
"95070".match(/\d{5}/).to_s == "95070"
"95070".match(/\d{5}/) =~ "95070"
"95070".match(/\d{5}/) === "95070"
"95070".match(/\d{5}/) == "95070"
"95070".matches(/\d{5}/) == "95070"
"95070".matches?(/\d{5}/).methods
"95070".match(/\d{5}/).methods
"95070".match(/\d{5}/)
zip_arr.last.length == 4
zip_arr.last == 4
zip_arr
c
ec
zip_arr.first.to_i.to_s == zip_arr.first
zip_arr.first.to_i.to_s
zip_arr.first.length == count
check_len
zip_arr
c
check_params("asdf")
n
params[:zip_code]
n
check_len
zip_arr.length == check_len
zip_arr
n
zip_arr
n
zip_arr
n
zip_code.split("-")
zip_code
c
matches.names
matches.methods
matches.val
matches
c
@locations.length
@locations
c
raw_json["response_code"]
raw_json
n
c
zip_code
c
params
zip_code
c
params[:zip_code]
zip_code
raw_json
c
ls
locations.length
locations
c
params
c
locations.length
locations
c
cc
c
el1["precip"].to_i
c
a["timestamp"].to_date > 10.days.ago
a["timestamp"].to_date
a["timestamp"]
b
a
c
b.save
b = Location.new(a[0])
Location.new(a[0])
a[0]["zip_code"] = zip_code.to_i
a = JSON.parse(res.body)
c
Location.new(a[0])
Locations.new(a[0])
a[0]
a[0]["zip_code"] = zip_code.to_i
a[0]["zip_code"] = zip_code
a = JSON.parse(res.body)
a = _
JSON.parse(res.body)
res.body
c
Location.new(a[0])
a[0]
a[0]["zip_code"] = zip_code
a[0]
a = JSON.parse(res.body)
JSON.parse(res.body)
res.body
c
url.request_uri
res
res.body
c
url.request_uri
url.get_uri
res.body
res
url.port
url.host
url
req
res.body
res
res.body
c
Location.last_days("95070", 10)
Location.last_days("95070")
LLocation.last_days("95070")
params[:zip_code]
c
params
